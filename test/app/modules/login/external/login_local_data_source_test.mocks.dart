// Mocks generated by Mockito 5.0.15 from annotations
// in mais_filmes/test/app/modules/login/external/login_local_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mais_filmes/app/shared/sqlite/interfaces/sqlite_driver.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [ISqliteDriver].
///
/// See the documentation for Mockito's code generation for more information.
class MockISqliteDriver extends _i1.Mock implements _i2.ISqliteDriver {
  MockISqliteDriver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> insert(String? table, Map<String, Object?>? values) =>
      (super.noSuchMethod(Invocation.method(#insert, [table, values]),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<int> update(String? table, Map<String, Object?>? values,
          {String? where}) =>
      (super.noSuchMethod(
          Invocation.method(#update, [table, values], {#where: where}),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  _i3.Future<bool> delete(String? table, {String? where}) =>
      (super.noSuchMethod(Invocation.method(#delete, [table], {#where: where}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<Map<String, Object?>>> select(String? table,
          {bool? distinct,
          List<String>? columns,
          String? where,
          List<Object?>? whereArgs,
          String? groupBy,
          String? having,
          String? orderBy,
          int? limit,
          int? offset}) =>
      (super.noSuchMethod(
              Invocation.method(#select, [
                table
              ], {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy,
                #limit: limit,
                #offset: offset
              }),
              returnValue: Future<List<Map<String, Object?>>>.value(
                  <Map<String, Object?>>[]))
          as _i3.Future<List<Map<String, Object?>>>);
  @override
  _i3.Future<Map<String, Object?>> get(String? table,
          {bool? distinct,
          List<String>? columns,
          String? where,
          List<Object?>? whereArgs,
          String? groupBy,
          String? having,
          String? orderBy}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [
                table
              ], {
                #distinct: distinct,
                #columns: columns,
                #where: where,
                #whereArgs: whereArgs,
                #groupBy: groupBy,
                #having: having,
                #orderBy: orderBy
              }),
              returnValue:
                  Future<Map<String, Object?>>.value(<String, Object?>{}))
          as _i3.Future<Map<String, Object?>>);
  @override
  String toString() => super.toString();
}
